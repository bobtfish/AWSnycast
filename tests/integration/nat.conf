#cloud-config
apt_sources:
 - source: "deb http://apt.puppetlabs.com vivid main"
   keyid: 1054b7a24bd6ec30
apt_upgrade: true
locale: en_US.UTF-8
packages:
 - build-essential
 - puppet
 - git
 - traceroute
 - nmap
 - nginx
 - python-pip
write_files:
-   path: /lib/systemd/system/awsnycast.service
    content: |
        [Unit]
        Description=Job that runs AWSnycast

        [Service]
        Type=simple
        ExecStart=/usr/local/bin/AWSnycast
-   path: /etc/awsnycast.yaml
    content: |
        ---
        poll_time: 30 # Note this is insanely small for a prod deployment, I think?
        healthchecks:
            public:
                type: ping
                destination: 8.8.8.8
                rise: 2
                fall: 10
                every: 1
            anycast:
                type: tcp
                destination: 192.168.1.1
                rise: 2
                fall: 2
                every: 1
                config:
                    port: 80
        remote_healthchecks:
            service:
                type: tcp
                rise: 10 # Note we set these a lot higher than local healthchecks
                fall: 10
                every: 10
                config:
                    port: 80
        routetables:
            my_az:
                find:
                    type: and
                    config:
                        filters:
                          - type: by_tag
                            config:
                                key: az
                                value: __MYAZ__
                          - type: by_tag
                            config:
                                key: type
                                value: private
                manage_routes:
                   - cidr: 0.0.0.0/0
                     instance: SELF
                     healthcheck: public
                   - cidr: 192.168.1.1/32
                     instance: SELF
                     healthcheck: anycast
                     remote_healthcheck: service
            other_azs:
                find:
                    type: and
                    config:
                        filters:
                          - type: by_tag
                            not: true
                            config:
                                key: az
                                value: __MYAZ__
                          - type: by_tag
                            config:
                                key: type
                                value: private
                manage_routes:
                  - cidr: 0.0.0.0/0
                    instance: SELF
                    healthcheck: public
                    if_unhealthy: true
                  - cidr: 192.168.1.1/32
                    instance: SELF
                    if_unhealthy: true
                    healthcheck: anycast
                    remote_healthcheck: service
runcmd:
 - [ puppet, module, install, adrien/network ]
 - [ puppet, resource, network_config, "lo:vip", method=static, onboot=true, ipaddress=192.168.1.1, netmask=255.255.255.255 ]
 - [ ifup, --allow, auto, "lo:vip" ]
 - [ sh, -c, "facter ec2_placement_availability_zone |cut -d- -f3|sed -e's/[0-9]//' > /var/www/html/index.html" ]
 - [ sh, -c, "cd /usr/local&&wget https://storage.googleapis.com/golang/go1.6.linux-amd64.tar.gz&&tar xzf go1.6.linux-amd64.tar.gz&&rm go1.6.linux-amd64.tar.gz&&cd /home/ubuntu&&mkdir -p go/src/github.com/bobtfish&&echo export EDITOR=vim >> .bashrc&&echo export PATH=\"$PATH:/usr/local/go/bin:/home/ubuntu/go/bin\" >> .bashrc&&echo export GOPATH=/home/ubuntu/go >>.bashrc&&cd go/src/github.com/bobtfish&&git clone https://github.com/bobtfish/AWSnycast.git&&cd AWSnycast&&git remote set-url origin git@github.com:bobtfish/AWSnycast.git&&&&GOPATH=/home/ubuntu/go PATH=\"$PATH:/usr/local/go/bin:/home/ubuntu/go/bin\" go build .&&cp AWSnycast /usr/local/bin&& go get github.com/stretchr/testify/assert&&go get github.com/onsi/ginkgo&&go get github.com/onsi/gomega&&go get golang.org/x/crypto/ssh" ]
 - [ chown, -R, "ubuntu:", /home/ubuntu ]
 - [ sh, -c, "sudo -u ubuntu git config --global user.name \"Tomas Doran\"&&sudo -u ubuntu git config --global user.email bobtfish@bobtfish.net&& sudo -u ubuntu git config --global push.default simple" ]
 - [ sh, -c, "echo 1 > /proc/sys/net/ipv4/ip_forward" ]
 - [ pip, install, awscli ]
#;echo 655361 > /proc/sys/net/netfilter/nf_conntrack_max" ]
 - [ iptables, -N, LOGGINGF ]
 - [ iptables, -N, LOGGINGI ]
 - [ iptables, -A, LOGGINGF, -m, limit, --limit, 2/min, -j, LOG, --log-prefix, "IPTables-FORWARD-Dropped: ", --log-level, 4 ]
 - [ iptables, -A, LOGGINGI, -m, limit, --limit, 2/min, -j, LOG, --log-prefix, "IPTables-INPUT-Dropped: ", --log-level, 4 ]
 - [ iptables, -A, LOGGINGF, -j, DROP ]
 - [ iptables, -A, LOGGINGI, -j, DROP ]
 - [ iptables, -A, FORWARD, -s, 10.0.0.0/16, -j, ACCEPT ]
 - [ iptables, -A, FORWARD, -j, LOGGINGF ]
 - [ iptables, -P, FORWARD, DROP ]
 - [ iptables, -I, FORWARD, -m, state, --state, "ESTABLISHED,RELATED", -j, ACCEPT ]
 - [ iptables, -t, nat, -I, POSTROUTING, -s, 10.0.0.0/16, -d, 0.0.0.0/0, -j, MASQUERADE ]
 - [ iptables, -A, INPUT, -s, 10.0.0.0/16, -j, ACCEPT ]
 - [ iptables, -A, INPUT, -p, tcp, --dport, 22, -m, state, --state, NEW, -j, ACCEPT ]
 - [ iptables, -I, INPUT, -m, state, --state, "ESTABLISHED,RELATED", -j, ACCEPT ]
 - [ iptables, -I, INPUT, -i, lo, -j, ACCEPT ]
 - [ iptables, -A, INPUT, -j, LOGGINGI ]
 - [ iptables, -P, INPUT, DROP ]
 - [ systemctl, start, awsnycast ]

